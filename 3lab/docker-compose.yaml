version: '3.7'
services:
  init:
    container_name: init3
    build:
      context: ../data
      dockerfile: Dockerfile
    networks:
      - network1234
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    
  users:
    container_name: users3
    build:
      context: ./users
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - network1234

  postgres:
    container_name: postgres3
    image: postgres:16
    environment:
      - POSTGRES_USER=lada
      - POSTGRES_PASSWORD=lada
      - PGDATA=/data/postgres
      - POSTGRES_DB=archdb
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "lada" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - network1234 

  services: 
    container_name: services3
    build:
      context: ./services
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    networks:
      - network1234
    depends_on:
      mongo:
        condition: service_healthy

  orders: 
    container_name: orders3
    build:
      context: ./orders
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    networks:
      - network1234
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo
    container_name: mongo3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ladadmin
      MONGO_INITDB_ROOT_PASSWORD: 1234pass
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - network1234

networks:
  network1234:
    driver: "bridge"
    external: false
