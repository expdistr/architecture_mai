openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /users/:
    post:
      summary: Create User
      operationId: create_user_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/{user_id}:
    put:
      summary: Update User
      operationId: update_user_users__user_id__put
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: Get User
      operationId: get_user_users__user_id__get
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete User
      operationId: delete_user_users__user_id__delete
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /search_by_name:
    get:
      summary: Search By Name
      operationId: search_by_name_search_by_name_get
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
            minLength: 1
            title: Name
        - name: last_name
          in: query
          required: false
          schema:
            type: string
            minLength: 1
            title: Last Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /search_by_login:
    get:
      summary: Search By Login
      operationId: search_by_login_search_by_login_get
      parameters:
        - name: login
          in: query
          required: false
          schema:
            type: string
            minLength: 1
            title: Login
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    UserCreate:
      properties:
        login:
          type: string
          title: Login
        name:
          type: string
          title: Name
        last_name:
          type: string
          title: Last Name
        mail:
          type: string
          title: Mail
        password:
          type: string
          title: Password
      type: object
      required:
        - login
        - name
        - password
      title: UserCreate
    UserUpdate:
      properties:
        id:
          type: integer
          title: Id
        login:
          type: string
          title: Login
        name:
          type: string
          title: Name
        last_name:
          type: string
          title: Last Name
        mail:
          type: string
          title: Mail
      type: object
      required:
        - id
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
